apiVersion: koreo.dev/v1beta1
kind: ResourceFunction
metadata:
  name: aws-environment-public-subnet
spec:
  locals:
    metadata: |
      =inputs.metadata.overlay({"name": inputs.metadata.name + "-" + inputs.subnet.name + "-public"})

  apiConfig:
    apiVersion: ec2.services.k8s.aws/v1alpha1
    kind: Subnet
    name: =locals.metadata.name
    namespace: =locals.metadata.namespace

  resource:
    metadata: =locals.metadata
    spec:
      availabilityZone: =inputs.subnet.availabilityZone
      cidrBlock: =inputs.subnet.cidrBlock
      tags: =inputs.resource_tags.tags
      mapPublicIPOnLaunch: true
      vpcRef:
        from:
          name: =inputs.vpc.name
      routeTableRefs:
        - from:
            name: =inputs.public_route_table.name

  create:
    delay: 1

  postconditions:
    - assert: =has(resource.status.subnetID)
      retry:
        message: Waiting for subnet to become healthy
        delay: 5

  return:
    name: =locals.metadata.name
    subnet_id: =resource.status.subnetID
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: aws-environment-public-subnet-test
spec:
  functionRef:
    kind: ResourceFunction
    name: aws-environment-public-subnet
  inputs:
    metadata:
      name: test
      namespace: test-namespace
    public_route_table:
      name: public_route_table
    resource_tags:
      tags:
      - key: test
        value: value
    subnet:
      availabilityZone: us-west-2a
      cidrBlock: 10.0.0.0/20
      name: a
    vpc:
      name: vpc

  testCases:
    - expectResource:
        apiVersion: ec2.services.k8s.aws/v1alpha1
        kind: Subnet
        metadata:
          name: test-a-public
          namespace: test-namespace
        spec:
          availabilityZone: us-west-2a
          cidrBlock: 10.0.0.0/20
          mapPublicIPOnLaunch: true
          routeTableRefs:
          - from:
              name: public_route_table
          tags:
          - key: test
            value: value
          vpcRef:
            from:
              name: vpc
